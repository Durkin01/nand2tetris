// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux8Way16.hdl

/**
 * 8-way 16-bit multiplexor:
 * out = a if sel == 000
 *       b if sel == 001
 *       etc.
 *       h if sel == 111
 */

CHIP Mux8Way16 {
    IN a[16], b[16], c[16], d[16],
       e[16], f[16], g[16], h[16],
       sel[3];
    OUT out[16];

    PARTS:
    // Put your code here:
     Not(in=sel[0],out=notSel0);
     Not(in=sel[1],out=notSel1);
     Not(in=sel[2],out=notSel2);
     
     /** A **/
     And(a=notSel2,b=notSel1,out=aPrep);
     And(a=aPrep,b=notSel0,out=A);
     /** B **/
     And(a=notSel2,b=notSel1,out=bPrep);
     And(a=bPrep,b=sel[0],out=B);
     /** C **/
     And(a=notSel2,b=sel[1],out=cPrep);
     And(a=cPrep,b=notSel0,out=C);
     /** D **/
     And(a=notSel2,b=sel[1],out=dPrep);
     And(a=dPrep,b=sel[0],out=D);
     /** E **/
     And(a=sel[2],b=notSel1,out=ePrep);
     And(a=ePrep,b=notSel0,out=E);
     /** F **/
     And(a=sel[2],b=notSel1,out=fPrep);
     And(a=fPrep,b=sel[0],out=F);
     /** G **/
     And(a=sel[2],b=sel[1],out=gPrep);
     And(a=gPrep,b=notSel0,out=G);
     /** H **/
     And(a=sel[2],b=sel[1],out=hPrep);
     And(a=hPrep,b=sel[0],out=H);

     Mux16(a=a,b=b,sel=B,out=aMuxB);
     Mux16(a=aMuxB,b=c,sel=C,out=abMuxC);
     Mux16(a=abMuxC,b=d,sel=D,out=abcMuxD);
     Mux16(a=abcMuxD,b=e,sel=E,out=abcdMuxE);
     Mux16(a=abcdMuxE,b=f,sel=F,out=abcdeMuxF);
     Mux16(a=abcdeMuxF,b=g,sel=G,out=abcdefMuxG);
     Mux16(a=abcdefMuxG,b=h,sel=H,out=out);
}
